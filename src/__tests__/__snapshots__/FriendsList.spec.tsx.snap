// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FriendList /> testit Frendit renderöityy... 1`] = `
Array [
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          undefined,
          undefined,
          undefined,
          Object {
            "flex": 1,
          },
          Object {
            "backgroundColor": "#f6f6f6",
            "padding": 0,
          },
          undefined,
          undefined,
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "System",
              "fontWeight": "400",
            },
            Object {
              "textAlign": "left",
            },
            Array [
              Object {
                "textAlign": "left",
              },
              Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "System",
                "fontWeight": "400",
                "writingDirection": "ltr",
              },
              Array [
                Object {
                  "fontSize": 24,
                  "letterSpacing": 0,
                  "lineHeight": 32,
                  "marginVertical": 2,
                },
                Object {
                  "padding": 10,
                  "textAlign": "center",
                },
              ],
            ],
          ]
        }
      >
        Friends
      </Text>
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "space-between",
              "width": "100%",
            },
            undefined,
            undefined,
            Object {
              "justifyContent": "space-around",
            },
            null,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 0,
              "elevation": 0,
              "minWidth": 64,
            }
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              Object {
                "disabled": undefined,
              }
            }
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                Object {
                  "borderRadius": 4,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "marginLeft": 12,
                    "marginRight": -4,
                  }
                }
              >
                <Text
                  accessibilityElementsHidden={true}
                  allowFontScaling={false}
                  importantForAccessibility="no-hide-descendants"
                  pointerEvents="none"
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "color": "#6200ee",
                        "fontSize": 16,
                      },
                      Array [
                        Object {
                          "lineHeight": 16,
                          "transform": Array [
                            Object {
                              "scaleX": 1,
                            },
                          ],
                        },
                        Object {
                          "backgroundColor": "transparent",
                        },
                      ],
                      Object {
                        "fontFamily": "material-community",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  󰐕
                </Text>
              </View>
              <Text
                numberOfLines={1}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontFamily": "System",
                      "fontWeight": "400",
                    },
                    Object {
                      "textAlign": "left",
                    },
                    Array [
                      Object {
                        "letterSpacing": 1,
                        "marginHorizontal": 16,
                        "marginVertical": 9,
                        "textAlign": "center",
                      },
                      undefined,
                      Object {
                        "textTransform": "uppercase",
                      },
                      Object {
                        "color": "#6200ee",
                        "fontFamily": "System",
                        "fontWeight": "500",
                      },
                      Object {
                        "fontFamily": "System",
                        "fontWeight": "500",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Add friend
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 0,
              "elevation": 0,
              "minWidth": 64,
            }
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              Object {
                "disabled": undefined,
              }
            }
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                Object {
                  "borderRadius": 4,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "marginLeft": 12,
                    "marginRight": -4,
                  }
                }
              >
                <Text
                  accessibilityElementsHidden={true}
                  allowFontScaling={false}
                  importantForAccessibility="no-hide-descendants"
                  pointerEvents="none"
                  selectable={false}
                  style={
                    Array [
                      Object {
                        "color": "#6200ee",
                        "fontSize": 16,
                      },
                      Array [
                        Object {
                          "lineHeight": 16,
                          "transform": Array [
                            Object {
                              "scaleX": 1,
                            },
                          ],
                        },
                        Object {
                          "backgroundColor": "transparent",
                        },
                      ],
                      Object {
                        "fontFamily": "material-community",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  󰐕
                </Text>
              </View>
              <Text
                numberOfLines={1}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontFamily": "System",
                      "fontWeight": "400",
                    },
                    Object {
                      "textAlign": "left",
                    },
                    Array [
                      Object {
                        "letterSpacing": 1,
                        "marginHorizontal": 16,
                        "marginVertical": 9,
                        "textAlign": "center",
                      },
                      undefined,
                      Object {
                        "textTransform": "uppercase",
                      },
                      Object {
                        "color": "#6200ee",
                        "fontFamily": "System",
                        "fontWeight": "500",
                      },
                      Object {
                        "fontFamily": "System",
                        "fontWeight": "500",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Create friend
              </Text>
            </View>
          </View>
        </View>
      </View>
      <RCTScrollView
        ItemSeparatorComponent={[Function]}
        ListFooterComponent={[Function]}
        data={
          Array [
            Object {
              "blockFriendRequests": false,
              "id": "userid2",
              "name": "TestUser2",
            },
            Object {
              "blockFriendRequests": false,
              "id": "userid3",
              "name": "TestUser3",
            },
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        style={
          Object {
            "borderColor": "lightgray",
            "borderTopWidth": 1,
            "marginTop": 10,
          }
        }
        updateCellsBatchingPeriod={50}
        viewabilityConfigCallbackPairs={Array []}
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                      "padding": 22,
                    },
                    Object {
                      "backgroundColor": "#ffffff",
                    },
                    false,
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#000000",
                          "fontFamily": "System",
                          "fontWeight": "400",
                        },
                        Object {
                          "textAlign": "left",
                        },
                        Array [
                          Object {
                            "textAlign": "left",
                          },
                          Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "System",
                            "fontWeight": "400",
                            "writingDirection": "ltr",
                          },
                          Array [
                            Object {
                              "fontSize": 16,
                              "letterSpacing": 0.5,
                              "lineHeight": 24,
                              "marginVertical": 2,
                            },
                            undefined,
                          ],
                        ],
                      ]
                    }
                  >
                    TestUser2
                  </Text>
                </View>
                <View
                  accessibilityRole="button"
                  accessibilityState={
                    Object {
                      "disabled": undefined,
                    }
                  }
                  accessible={true}
                  focusable={true}
                  hitSlop={
                    Object {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "margin": 6,
                          "overflow": "hidden",
                        },
                        Object {
                          "borderRadius": 18,
                          "height": 36,
                          "width": 36,
                        },
                        undefined,
                        undefined,
                      ],
                    ]
                  }
                >
                  <View>
                    <Text
                      accessibilityElementsHidden={true}
                      allowFontScaling={false}
                      importantForAccessibility="no-hide-descendants"
                      pointerEvents="none"
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "color": "rgb(223,50,50)",
                            "fontSize": 24,
                          },
                          Array [
                            Object {
                              "lineHeight": 24,
                              "transform": Array [
                                Object {
                                  "scaleX": 1,
                                },
                              ],
                            },
                            Object {
                              "backgroundColor": "transparent",
                            },
                          ],
                          Object {
                            "fontFamily": "material-community",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      󰩹
                    </Text>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "borderColor": "lightgray",
                  "borderTopWidth": 1,
                  "minHeight": 1,
                }
              }
            />
          </View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                      "padding": 22,
                    },
                    Object {
                      "backgroundColor": "#ffffff",
                    },
                    false,
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#000000",
                          "fontFamily": "System",
                          "fontWeight": "400",
                        },
                        Object {
                          "textAlign": "left",
                        },
                        Array [
                          Object {
                            "textAlign": "left",
                          },
                          Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": "System",
                            "fontWeight": "400",
                            "writingDirection": "ltr",
                          },
                          Array [
                            Object {
                              "fontSize": 16,
                              "letterSpacing": 0.5,
                              "lineHeight": 24,
                              "marginVertical": 2,
                            },
                            undefined,
                          ],
                        ],
                      ]
                    }
                  >
                    TestUser3
                  </Text>
                </View>
                <View
                  accessibilityRole="button"
                  accessibilityState={
                    Object {
                      "disabled": undefined,
                    }
                  }
                  accessible={true}
                  focusable={true}
                  hitSlop={
                    Object {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "margin": 6,
                          "overflow": "hidden",
                        },
                        Object {
                          "borderRadius": 18,
                          "height": 36,
                          "width": 36,
                        },
                        undefined,
                        undefined,
                      ],
                    ]
                  }
                >
                  <View>
                    <Text
                      accessibilityElementsHidden={true}
                      allowFontScaling={false}
                      importantForAccessibility="no-hide-descendants"
                      pointerEvents="none"
                      selectable={false}
                      style={
                        Array [
                          Object {
                            "color": "rgb(223,50,50)",
                            "fontSize": 24,
                          },
                          Array [
                            Object {
                              "lineHeight": 24,
                              "transform": Array [
                                Object {
                                  "scaleX": 1,
                                },
                              ],
                            },
                            Object {
                              "backgroundColor": "transparent",
                            },
                          ],
                          Object {
                            "fontFamily": "material-community",
                            "fontStyle": "normal",
                            "fontWeight": "normal",
                          },
                          Object {},
                        ]
                      }
                    >
                      󰩹
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            onLayout={[Function]}
          >
            <View
              style={
                Object {
                  "borderColor": "lightgray",
                  "borderTopWidth": 1,
                  "minHeight": 1,
                }
              }
            />
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>,
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />,
]
`;
